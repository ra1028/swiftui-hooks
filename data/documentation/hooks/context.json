{"seeAlsoSections":[{"title":"Values","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/AsyncPhase","doc:\/\/Hooks\/documentation\/Hooks\/RefObject","doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"title":"Context","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:5Hooks7ContextO","modules":[{"name":"Hooks"}],"navigatorTitle":[{"kind":"identifier","text":"Context"}]},"abstract":[{"type":"text","text":"A type of context that to identify the context values."}],"sections":[],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/Context","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Hooks\/7SwiftUI14EnvironmentKeyP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer","doc:\/\/Hooks\/documentation\/Hooks\/Context\/Provider"]},{"title":"Type Properties","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Context\/defaultValue"]}],"variants":[{"paths":["\/documentation\/hooks\/context"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://Hooks/documentation/Hooks/Context/Consumer":{"role":"symbol","title":"Context.Consumer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumer"}],"abstract":[{"type":"text","text":"A view that consumes the context values that provided by "},{"type":"codeVoice","code":"Provider"},{"type":"text","text":" through view tree."},{"type":"text","text":" "},{"type":"text","text":"If the value is not provided by the "},{"type":"codeVoice","code":"Provider"},{"type":"text","text":" from upstream of the view tree, the view‚Äôs update will be asserted."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Consumer"}],"url":"\/documentation\/hooks\/context\/consumer"},"doc://Hooks/documentation/Hooks/Context":{"role":"symbol","title":"Context","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"A type of context that to identify the context values."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/hooks\/context"},"doc://Hooks/documentation/Hooks/RefObject":{"role":"symbol","title":"RefObject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefObject"}],"abstract":[{"type":"text","text":"A mutable object that referencing a value."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/RefObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefObject"}],"url":"\/documentation\/hooks\/refobject"},"doc://Hooks/documentation/Hooks/Context/defaultValue":{"role":"symbol","title":"defaultValue","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The default value for the context."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/defaultValue","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/context\/defaultvalue"},"doc://Hooks/documentation/Hooks/AsyncPhase":{"role":"symbol","title":"AsyncPhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"abstract":[{"type":"text","text":"An immutable representation of the most recent asynchronous operation phase."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/AsyncPhase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/hooks\/asyncphase"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy":{"role":"symbol","title":"HookUpdateStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookUpdateStrategy"}],"abstract":[{"type":"text","text":"Represents a strategy that determines when to update the state of hooks."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookUpdateStrategy"}],"url":"\/documentation\/hooks\/hookupdatestrategy"},"doc://Hooks/7SwiftUI14EnvironmentKeyP":{"type":"unresolvable","title":"SwiftUI.EnvironmentKey","identifier":"doc:\/\/Hooks\/7SwiftUI14EnvironmentKeyP"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/Context/Provider":{"role":"symbol","title":"Context.Provider","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Provider"}],"abstract":[{"type":"text","text":"A view that provides the context values through view tree."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/Provider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Provider"}],"url":"\/documentation\/hooks\/context\/provider"}}}