{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disableHooksRulesAssertion"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isDisabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that assertions disabled."}]}]},{"kind":"parameters","parameters":[{"name":"isDisabled","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A Boolean value that indicates whether"},{"type":"text","text":" "},{"type":"text","text":"the assertinos are disabled for this view."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this is disabled and a violation of hooks rules is detected,"},{"type":"text","text":" "},{"type":"text","text":"hooks will clear the unrecoverable state and attempt to continue"},{"type":"text","text":" "},{"type":"text","text":"the program."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In -O builds, assertions for hooks rules are disabled by default."}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hooks\/context\/consumer\/disablehooksrulesassertion(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer\/disableHooksRulesAssertion(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets whether to disable assertions that an internal sanity"},{"type":"text","text":" "},{"type":"text","text":"check of hooks rules."}],"kind":"symbol","metadata":{"role":"symbol","title":"disableHooksRulesAssertion(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disableHooksRulesAssertion"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewP5HooksE07disableD14RulesAssertionyQrSbF::SYNTHESIZED::s:5Hooks7ContextO8ConsumerV","extendedModule":"SwiftUI","modules":[{"name":"Hooks"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks","doc:\/\/Hooks\/documentation\/Hooks\/Context","doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer","doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer\/View-Implementations"]]},"references":{"doc://Hooks/documentation/Hooks/Context":{"role":"symbol","title":"Context","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"A type of context that to identify the context values."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/hooks\/context"},"doc://Hooks/documentation/Hooks/Context/Consumer/View-Implementations":{"role":"collectionGroup","title":"View Implementations","abstract":[],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/hooks\/context\/consumer\/view-implementations"},"doc://Hooks/documentation/Hooks/Context/Consumer":{"role":"symbol","title":"Context.Consumer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumer"}],"abstract":[{"type":"text","text":"A view that consumes the context values that provided by "},{"type":"codeVoice","code":"Provider"},{"type":"text","text":" through view tree."},{"type":"text","text":" "},{"type":"text","text":"If the value is not provided by the "},{"type":"codeVoice","code":"Provider"},{"type":"text","text":" from upstream of the view tree, the view‚Äôs update will be asserted."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Consumer"}],"url":"\/documentation\/hooks\/context\/consumer"},"doc://Hooks/documentation/Hooks/Context/Consumer/disableHooksRulesAssertion(_:)":{"role":"symbol","title":"disableHooksRulesAssertion(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disableHooksRulesAssertion"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"Sets whether to disable assertions that an internal sanity"},{"type":"text","text":" "},{"type":"text","text":"check of hooks rules."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context\/Consumer\/disableHooksRulesAssertion(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/context\/consumer\/disablehooksrulesassertion(_:)"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"}}}