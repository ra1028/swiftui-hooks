{"seeAlsoSections":[{"title":"Internal System","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/useHook(_:)","doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator","doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use it when your custom hook becomes too complex can not be made with existing hooks composition."}]}]}],"variants":[{"paths":["\/documentation\/hooks\/hook"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/Hook","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"Hook"},{"type":"text","text":" manages the state and overall behavior of a hook. It has lifecycles to manage the state and when to update the value."},{"type":"text","text":" "},{"type":"text","text":"It must be immutable, and should not have any state in itself, but should perform appropriate operations on the state managed by the internal system passed to lifecycle functions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"}],"title":"Hook","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Hooks4HookP","modules":[{"name":"Hooks"}],"navigatorTitle":[{"kind":"identifier","text":"Hook"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Hook\/State","doc:\/\/Hooks\/documentation\/Hooks\/Hook\/Value"]},{"title":"Instance Properties","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Hook\/shouldDeferredUpdate-rsvf","doc:\/\/Hooks\/documentation\/Hooks\/Hook\/updateStrategy"]},{"title":"Instance Methods","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Hook\/dispose(state:)-6ayj0","doc:\/\/Hooks\/documentation\/Hooks\/Hook\/makeState()-6nrb","doc:\/\/Hooks\/documentation\/Hooks\/Hook\/updateState(coordinator:)-6iy74","doc:\/\/Hooks\/documentation\/Hooks\/Hook\/value(coordinator:)-6u7nr"]},{"title":"Type Aliases","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Hook\/Coordinator"]}],"references":{"doc://Hooks/documentation/Hooks/Hook":{"role":"symbol","title":"Hook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"}],"abstract":[{"type":"codeVoice","code":"Hook"},{"type":"text","text":" manages the state and overall behavior of a hook. It has lifecycles to manage the state and when to update the value."},{"type":"text","text":" "},{"type":"text","text":"It must be immutable, and should not have any state in itself, but should perform appropriate operations on the state managed by the internal system passed to lifecycle functions."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Hook"}],"url":"\/documentation\/hooks\/hook"},"doc://Hooks/documentation/Hooks/HookDispatcher":{"role":"symbol","title":"HookDispatcher","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookDispatcher"}],"abstract":[{"type":"text","text":"A class that manages list of states of hooks used inside "},{"type":"codeVoice","code":"HookDispatcher.scoped(environment:_)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookDispatcher"}],"url":"\/documentation\/hooks\/hookdispatcher"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"🪝 A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/Hook/shouldDeferredUpdate-rsvf":{"defaultImplementations":1,"role":"symbol","title":"shouldDeferredUpdate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldDeferredUpdate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Indicates whether the value should be updated after all hooks have been evaluated."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/shouldDeferredUpdate-rsvf","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/shoulddeferredupdate-rsvf"},"doc://Hooks/documentation/Hooks/Hook/Value":{"role":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"The type of value that this hook returns."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/Value","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/value"},"doc://Hooks/documentation/Hooks/Hook/value(coordinator:)-6u7nr":{"defaultImplementations":1,"role":"symbol","title":"value(coordinator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":"("},{"kind":"externalParam","text":"coordinator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Coordinator","preciseIdentifier":"s:5Hooks4HookP11Coordinatora"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Returns a value which is returned when this hook is called."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/value(coordinator:)-6u7nr","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/value(coordinator:)-6u7nr"},"doc://Hooks/documentation/Hooks/Hook/updateStrategy":{"role":"symbol","title":"updateStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"A strategy that determines when to update the state."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/updateStrategy","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/updatestrategy"},"doc://Hooks/documentation/Hooks/Hook/Coordinator":{"role":"symbol","title":"Hook.Coordinator","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coordinator"}],"abstract":[{"type":"text","text":"The type of contextual information about the state of the hook."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/Coordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Coordinator"}],"url":"\/documentation\/hooks\/hook\/coordinator"},"doc://Hooks/documentation/Hooks/Hook/updateState(coordinator:)-6iy74":{"defaultImplementations":1,"role":"symbol","title":"updateState(coordinator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateState"},{"kind":"text","text":"("},{"kind":"externalParam","text":"coordinator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Coordinator","preciseIdentifier":"s:5Hooks4HookP11Coordinatora"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Updates the state when the "},{"type":"codeVoice","code":"updateStrategy"},{"type":"text","text":" determines that an update is necessary."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/updateState(coordinator:)-6iy74","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/updatestate(coordinator:)-6iy74"},"doc://Hooks/documentation/Hooks/HookCoordinator":{"role":"symbol","title":"HookCoordinator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookCoordinator"}],"abstract":[{"type":"text","text":"Contextual information about the state of the hook."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookCoordinator"}],"url":"\/documentation\/hooks\/hookcoordinator"},"doc://Hooks/documentation/Hooks/Hook/State":{"role":"symbol","title":"State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"abstract":[{"type":"text","text":"The type of state that is used to preserves the value returned by this hook."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/State","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/state"},"doc://Hooks/documentation/Hooks/Hook/dispose(state:)-6ayj0":{"defaultImplementations":1,"role":"symbol","title":"dispose(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Dispose of the state and interrupt running asynchronous operation."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/dispose(state:)-6ayj0","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/dispose(state:)-6ayj0"},"doc://Hooks/documentation/Hooks/useHook(_:)":{"role":"symbol","title":"useHook(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useHook"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Register the hook to the view and returns its value."},{"type":"text","text":" "},{"type":"text","text":"Must be called at the function top level within scope of the "},{"type":"codeVoice","code":"HookScope"},{"type":"text","text":" or the HookView.hookBody`."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/useHook(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/usehook(_:)"},"doc://Hooks/documentation/Hooks/Hook/makeState()-6nrb":{"defaultImplementations":1,"role":"symbol","title":"makeState()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeState"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"}],"abstract":[{"type":"text","text":"Returns a initial state of this hook."},{"type":"text","text":" "},{"type":"text","text":"Internal system calls this function to create a state at first time each hook is evaluated."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/makeState()-6nrb","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/makestate()-6nrb"}}}