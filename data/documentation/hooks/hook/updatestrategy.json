{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV","text":"HookUpdateStrategy"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hooks\/hook\/updatestrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/updateStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A strategy that determines when to update the state."}],"kind":"symbol","metadata":{"role":"symbol","title":"updateStrategy","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV"},{"kind":"text","text":"?"}],"symbolKind":"property","externalID":"s:5Hooks4HookP14updateStrategyAA0b6UpdateD0VSgvp","required":true,"modules":[{"name":"Hooks"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks","doc:\/\/Hooks\/documentation\/Hooks\/Hook"]]},"references":{"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/Hook":{"role":"symbol","title":"Hook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"}],"abstract":[{"type":"codeVoice","code":"Hook"},{"type":"text","text":" manages the state and overall behavior of a hook. It has lifecycles to manage the state and when to update the value."},{"type":"text","text":" "},{"type":"text","text":"It must be immutable, and should not have any state in itself, but should perform appropriate operations on the state managed by the internal system passed to lifecycle functions."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Hook"}],"url":"\/documentation\/hooks\/hook"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy":{"role":"symbol","title":"HookUpdateStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookUpdateStrategy"}],"abstract":[{"type":"text","text":"Represents a strategy that determines when to update the state of hooks."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookUpdateStrategy"}],"url":"\/documentation\/hooks\/hookupdatestrategy"},"doc://Hooks/documentation/Hooks/Hook/updateStrategy":{"role":"symbol","title":"updateStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"A strategy that determines when to update the state."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook\/updateStrategy","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hooks\/hook\/updatestrategy"}}}