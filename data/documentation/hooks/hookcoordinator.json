{"seeAlsoSections":[{"title":"Internal System","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/useHook(_:)","doc:\/\/Hooks\/documentation\/Hooks\/Hook","doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookCoordinator"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook","preciseIdentifier":"s:5Hooks4HookP","text":"Hook"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/hooks\/hookcoordinator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Contextual information about the state of the hook."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookCoordinator"}],"title":"HookCoordinator","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:5Hooks15HookCoordinatorV","modules":[{"name":"Hooks"}],"navigatorTitle":[{"kind":"identifier","text":"HookCoordinator"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/init(state:environment:updateView:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/environment","doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/state","doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/updateView"]}],"references":{"doc://Hooks/documentation/Hooks/HookCoordinator/init(state:environment:updateView:)":{"role":"symbol","title":"init(state:environment:updateView:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnvironmentValues","preciseIdentifier":"s:7SwiftUI17EnvironmentValuesV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"updateView"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new coordinator."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/init(state:environment:updateView:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookcoordinator\/init(state:environment:updateview:)"},"doc://Hooks/documentation/Hooks/HookCoordinator/updateView":{"role":"symbol","title":"updateView","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateView"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"abstract":[{"type":"text","text":"A function that to update the content of the nearest scope."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/updateView","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookcoordinator\/updateview"},"doc://Hooks/documentation/Hooks/Hook":{"role":"symbol","title":"Hook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"}],"abstract":[{"type":"codeVoice","code":"Hook"},{"type":"text","text":" manages the state and overall behavior of a hook. It has lifecycles to manage the state and when to update the value."},{"type":"text","text":" "},{"type":"text","text":"It must be immutable, and should not have any state in itself, but should perform appropriate operations on the state managed by the internal system passed to lifecycle functions."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Hook"}],"url":"\/documentation\/hooks\/hook"},"doc://Hooks/documentation/Hooks/HookCoordinator/environment":{"role":"symbol","title":"environment","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnvironmentValues","preciseIdentifier":"s:7SwiftUI17EnvironmentValuesV"}],"abstract":[{"type":"text","text":"The current environment of the scope."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/environment","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookcoordinator\/environment"},"doc://Hooks/documentation/Hooks/useHook(_:)":{"role":"symbol","title":"useHook(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useHook"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Register the hook to the view and returns its value."},{"type":"text","text":" "},{"type":"text","text":"Must be called at the function top level within scope of the "},{"type":"codeVoice","code":"HookScope"},{"type":"text","text":" or the HookView.hookBody`."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/useHook(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/usehook(_:)"},"doc://Hooks/documentation/Hooks/HookCoordinator":{"role":"symbol","title":"HookCoordinator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookCoordinator"}],"abstract":[{"type":"text","text":"Contextual information about the state of the hook."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookCoordinator"}],"url":"\/documentation\/hooks\/hookcoordinator"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/HookCoordinator/state":{"role":"symbol","title":"state","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"}],"abstract":[{"type":"text","text":"The state of the hook stored in the scope."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator\/state","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookcoordinator\/state"},"doc://Hooks/documentation/Hooks/HookDispatcher":{"role":"symbol","title":"HookDispatcher","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookDispatcher"}],"abstract":[{"type":"text","text":"A class that manages list of states of hooks used inside "},{"type":"codeVoice","code":"HookDispatcher.scoped(environment:_)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookDispatcher"}],"url":"\/documentation\/hooks\/hookdispatcher"}}}