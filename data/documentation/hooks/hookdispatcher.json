{"seeAlsoSections":[{"title":"Internal System","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/useHook(_:)","doc:\/\/Hooks\/documentation\/Hooks\/Hook","doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookDispatcher"}],"title":"HookDispatcher","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:5Hooks14HookDispatcherC","modules":[{"name":"Hooks"}],"navigatorTitle":[{"kind":"identifier","text":"HookDispatcher"}]},"abstract":[{"type":"text","text":"A class that manages list of states of hooks used inside "},{"type":"codeVoice","code":"HookDispatcher.scoped(environment:_)"},{"type":"text","text":"."}],"sections":[],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Hooks\/7Combine16ObservableObjectP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/objectWillChange"]},{"title":"Instance Methods","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/disposeAll()","doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/scoped(environment:_:)","doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/use(_:)"]}],"variants":[{"paths":["\/documentation\/hooks\/hookdispatcher"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookDispatcher"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://Hooks/documentation/Hooks/useHook(_:)":{"role":"symbol","title":"useHook(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useHook"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Register the hook to the view and returns its value."},{"type":"text","text":" "},{"type":"text","text":"Must be called at the function top level within scope of the "},{"type":"codeVoice","code":"HookScope"},{"type":"text","text":" or the HookView.hookBody`."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/useHook(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/usehook(_:)"},"doc://Hooks/documentation/Hooks/HookCoordinator":{"role":"symbol","title":"HookCoordinator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookCoordinator"}],"abstract":[{"type":"text","text":"Contextual information about the state of the hook."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookCoordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookCoordinator"}],"url":"\/documentation\/hooks\/hookcoordinator"},"doc://Hooks/documentation/Hooks/HookDispatcher/use(_:)":{"role":"symbol","title":"use(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"use"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Returns given hooks value with managing its state and update it if needed."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/use(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookdispatcher\/use(_:)"},"doc://Hooks/documentation/Hooks/Hook":{"role":"symbol","title":"Hook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"}],"abstract":[{"type":"codeVoice","code":"Hook"},{"type":"text","text":" manages the state and overall behavior of a hook. It has lifecycles to manage the state and when to update the value."},{"type":"text","text":" "},{"type":"text","text":"It must be immutable, and should not have any state in itself, but should perform appropriate operations on the state managed by the internal system passed to lifecycle functions."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Hook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Hook"}],"url":"\/documentation\/hooks\/hook"},"doc://Hooks/documentation/Hooks/HookDispatcher/scoped(environment:_:)":{"role":"symbol","title":"scoped(environment:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scoped"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnvironmentValues","preciseIdentifier":"s:7SwiftUI17EnvironmentValuesV"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"abstract":[{"type":"text","text":"Executes the given "},{"type":"codeVoice","code":"body"},{"type":"text","text":" function that needs "},{"type":"codeVoice","code":"HookDispatcher"},{"type":"text","text":" instance with managing hooks state."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/scoped(environment:_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookdispatcher\/scoped(environment:_:)"},"doc://Hooks/documentation/Hooks/HookDispatcher/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"HookDispatcher"},{"type":"text","text":"."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/init()","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookdispatcher\/init()"},"doc://Hooks/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/Hooks\/7Combine16ObservableObjectP"},"doc://Hooks/documentation/Hooks/HookDispatcher/disposeAll()":{"role":"symbol","title":"disposeAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disposeAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Disposes all hooks that already managed with this instance."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/disposeAll()","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookdispatcher\/disposeall()"},"doc://Hooks/documentation/Hooks/HookDispatcher/objectWillChange":{"role":"symbol","title":"objectWillChange","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"objectWillChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PassthroughSubject","preciseIdentifier":"s:7Combine18PassthroughSubjectC"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A publisher that emits before the object has changed."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher\/objectWillChange","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookdispatcher\/objectwillchange"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/HookDispatcher":{"role":"symbol","title":"HookDispatcher","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookDispatcher"}],"abstract":[{"type":"text","text":"A class that manages list of states of hooks used inside "},{"type":"codeVoice","code":"HookDispatcher.scoped(environment:_)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookDispatcher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookDispatcher"}],"url":"\/documentation\/hooks\/hookdispatcher"}}}