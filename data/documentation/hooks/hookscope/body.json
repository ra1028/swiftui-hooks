{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hooks\/hookscope\/body"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/HookScope\/body","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The content and behavior of the hook scoped view."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"body","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:5Hooks9HookScopeV4bodyQrvp","modules":[{"name":"Hooks"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks","doc:\/\/Hooks\/documentation\/Hooks\/HookScope"]]},"references":{"doc://Hooks/documentation/Hooks/HookScope/body":{"role":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"The content and behavior of the hook scoped view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookScope\/body","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookscope\/body"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/HookScope":{"role":"symbol","title":"HookScope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookScope"}],"abstract":[{"type":"text","text":"A view that hosts the state of hooks."},{"type":"text","text":" "},{"type":"text","text":"All hooks should be called within the evaluation of this view‚Äôs body."},{"type":"text","text":" "},{"type":"text","text":"The state of hooks are hosted by this view, and changes in state will cause re-evaluation the body of this view."},{"type":"text","text":" "},{"type":"text","text":"It is possible to limit the scope of re-evaluation by wrapping the views that use hooks in a "},{"type":"codeVoice","code":"HookScope"},{"type":"text","text":"."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookScope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookScope"}],"url":"\/documentation\/hooks\/hookscope"}}}