{"seeAlsoSections":[{"title":"Values","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/Context","doc:\/\/Hooks\/documentation\/Hooks\/AsyncPhase","doc:\/\/Hooks\/documentation\/Hooks\/RefObject"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookUpdateStrategy"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/hooks\/hookupdatestrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Represents a strategy that determines when to update the state of hooks."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookUpdateStrategy"}],"title":"HookUpdateStrategy","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:5Hooks18HookUpdateStrategyV","modules":[{"name":"Hooks"}],"navigatorTitle":[{"kind":"identifier","text":"HookUpdateStrategy"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/Dependency-swift.struct"]},{"title":"Initializers","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/init(dependency:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/dependency-swift.property"]},{"title":"Type Properties","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/once"]},{"title":"Type Methods","identifiers":["doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/preserved(by:)"]}],"references":{"doc://Hooks/documentation/Hooks/HookUpdateStrategy":{"role":"symbol","title":"HookUpdateStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookUpdateStrategy"}],"abstract":[{"type":"text","text":"Represents a strategy that determines when to update the state of hooks."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookUpdateStrategy"}],"url":"\/documentation\/hooks\/hookupdatestrategy"},"doc://Hooks/documentation/Hooks/AsyncPhase":{"role":"symbol","title":"AsyncPhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"abstract":[{"type":"text","text":"An immutable representation of the most recent asynchronous operation phase."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/AsyncPhase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/hooks\/asyncphase"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy/once":{"role":"symbol","title":"once","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"once"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV"}],"abstract":[{"type":"text","text":"A strategy that a hook will update its state just once."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/once","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookupdatestrategy\/once"},"doc://Hooks/documentation/Hooks/RefObject":{"role":"symbol","title":"RefObject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefObject"}],"abstract":[{"type":"text","text":"A mutable object that referencing a value."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/RefObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefObject"}],"url":"\/documentation\/hooks\/refobject"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy/dependency-swift.property":{"role":"symbol","title":"dependency","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependency","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV10DependencyV"}],"abstract":[{"type":"text","text":"A dependency value for updates. Hooks will attempt to update a state of hook when this value changes."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/dependency-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookupdatestrategy\/dependency-swift.property"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy/init(dependency:)":{"role":"symbol","title":"init(dependency:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dependency"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new strategy with given dependency value."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/init(dependency:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookupdatestrategy\/init(dependency:)"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy/Dependency-swift.struct":{"role":"symbol","title":"HookUpdateStrategy.Dependency","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dependency"}],"abstract":[{"type":"text","text":"A type erased dependency value that to determine if a hook should update its state."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/Dependency-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Dependency"}],"url":"\/documentation\/hooks\/hookupdatestrategy\/dependency-swift.struct"},"doc://Hooks/documentation/Hooks/Context":{"role":"symbol","title":"Context","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"A type of context that to identify the context values."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/Context","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/hooks\/context"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy/preserved(by:)":{"role":"symbol","title":"preserved(by:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preserved"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HookUpdateStrategy","preciseIdentifier":"s:5Hooks18HookUpdateStrategyV"}],"abstract":[{"type":"text","text":"Returns a strategy that a hook will update its state when the given value is changed."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/preserved(by:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookupdatestrategy\/preserved(by:)"}}}