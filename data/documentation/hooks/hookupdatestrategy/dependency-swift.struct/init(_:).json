{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An actual value that will be compared."}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hooks\/hookupdatestrategy\/dependency-swift.struct\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/Dependency-swift.struct\/init(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create a new dependency from the given equatable value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"init(_:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:5Hooks18HookUpdateStrategyV10DependencyVyAExcSQRzlufc","modules":[{"name":"Hooks"}]},"hierarchy":{"paths":[["doc:\/\/Hooks\/documentation\/Hooks","doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/Dependency-swift.struct"]]},"references":{"doc://Hooks/documentation/Hooks/HookUpdateStrategy/Dependency-swift.struct/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new dependency from the given equatable value."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/Dependency-swift.struct\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hooks\/hookupdatestrategy\/dependency-swift.struct\/init(_:)"},"doc://Hooks/documentation/Hooks":{"role":"collection","title":"Hooks","abstract":[{"type":"text","text":"ü™ù A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks","kind":"symbol","type":"topic","url":"\/documentation\/hooks"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy/Dependency-swift.struct":{"role":"symbol","title":"HookUpdateStrategy.Dependency","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dependency"}],"abstract":[{"type":"text","text":"A type erased dependency value that to determine if a hook should update its state."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy\/Dependency-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Dependency"}],"url":"\/documentation\/hooks\/hookupdatestrategy\/dependency-swift.struct"},"doc://Hooks/documentation/Hooks/HookUpdateStrategy":{"role":"symbol","title":"HookUpdateStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HookUpdateStrategy"}],"abstract":[{"type":"text","text":"Represents a strategy that determines when to update the state of hooks."}],"identifier":"doc:\/\/Hooks\/documentation\/Hooks\/HookUpdateStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HookUpdateStrategy"}],"url":"\/documentation\/hooks\/hookupdatestrategy"}}}